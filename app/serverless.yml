
service: school-barter

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-northeast-2
  lambdaHashingVersion: 20201221
  apiGateway:
    apiKeys:
      - serverless-apikey

# 로컬에서 serverless test
plugins:
  - serverless-offline
  - serverless-express
  - serverless-apigw-binary
  - serverless-prune-plugin

custom:
  apigwBinary:
    types:         
       - '*/*'
       - 'multipart/form-data'
  prune:
    automatic: true
    number: 5
 
# dotenv 사용 여부
useDotenv: true

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"


functions:
  app:
    handler: handler.handler
    events:
      - http:
          method: POST
          path: /api/user/signup
          cors: true
          # private: true
      - http:
          method: POST
          path: /api/user/login
          cors: true
          # private: true
      - http:
          method: GET
          path: /api/user/{nickname}
          cors: true
          # private: true
          request:
            parameters:
              paths:
                nickname: true
      - http:
          method: GET
          path: /api/home/today
          cors: true
          # private: true
      - http:
          method: GET
          path: /api/home/by-price
          cors: true
          # private: true
      - http:
          method: GET
          path: /api/home/users/{userNo}/viewed-products
          cors: true
          # private: true
          request:
            parameters:
              paths:
                userNo: true
      - http:
          method: GET
          path: /api/pick/school
          cors: true
          # private: true
      - http:
          method: GET
          path: /api/pick/department
          cors: true
          # private: true
      - http:
          method: GET
          path: /api/pick/major
          cors: true
          # private: true
      - http:
          method: POST
          path: /api/pick/major
          cors: true
          # private: true

      # 거래장터 API
      - http:
          method: GET
          path: /api/products
          cors: true
        #   private: true
      - http:
          method: GET
          path: /api/products/{productNo}
          cors: true
        #   private: true
          request:
            parameters:
              paths:
                productNo: true
      - http:
          method: POST
          path: /api/product
          cors: true
        #   private: true
      - http:
          method: PUT
          path: /api/products/{productNo}
          cors: true
        #   private: true
          request:
            parameters:
              paths:
                productNo: true
      - http:
          method: DELETE
          path: /api/products/{productNo}
          cors: true
        #   private: true
          request:
            parameters:
              paths:
                productNo: true

      # 커뮤니티 API
      - http:
          method: GET
          path: /api/communities/
          cors: true
        #   private: true
      - http:
          method: GET
          path: /api/communities/{communityNo}
          cors: true
        #   private: true
          request:
            parameters:
              paths:
                communityNo: true
      - http:
          method: POST
          path: /api/community
          cors: true
        #   private: true
      - http:
          method: PUT
          path: /api/communities/{communityNo}
          cors: true
        #   private: true
          request:
            parameters:
              paths:
                communityNo: true

      - http:
          method: PATCH
          path: /api/communities/count/{communityNo}
          cors: true
          request:
            parameters:
              paths:
                communityNo: true

      - http:
          method: DELETE
          path: /api/communities/{communityNo}
          cors: true
        #   private: true
          request:
            parameters:
              paths:
                communityNo: true
                
      # WATCHLIST
      - http:
            method: GET
            path: /api/watchlist/{userNo}
            cors: true
            # private: true
            request:
              parameters:
                paths:
                  userNo: true
      - http:
          method: POST
          path: /api/watchlist
          cors: true
          # private: true
      - http:
          method: DELETE
          path: /api/watchlist
          cors: true
          # private: true
      # SELLLIST
      - http:
          method: GET
          path: /api/selllist/{userNo}
          cors: true
          request:
            parameters:
              paths:
                userNo: true
      - http:
          method: GET
          path: /api/selllist/finish/{userNo}
          cors: true
          request:
            parameters:
              paths:
                userNo: true
      # BUYLIST
      - http:
          method: GET
          path: /api/buylist/{userNo}
          cors: true
          request:
            parameters:
              paths:
                userNo: true
      # PASSWORD
      - http:
          method: POST
          path: /api/user/findpassword
          cors: true
      - http:
          method: POST
          path: /api/user/changepassword
          cors: true

      #S3
      - http:
          method: POST
          path: /api/image
          cors: true
      - http:
          method: DELETE
          path: /api/image
          cors: true
      - http:
          method: POST
          path: /api/image/store
          cors: true
  

      #comments
      - http:
          method: POST
          path: /api/comment
          cors: true
          
      - http:
          method: PATCH
          path: /api/comments/{commentNo}
          cors: true
          request:
            parameters:
              paths:
                commentNo: true
      - http:
          method: PUT
          path: /api/comments/{commentNo}
          cors: true
          request:
            parameters:
              paths:
                commentNo: true
      - http:
          method: DELETE
          path: /api/comments/{commentNo}
          cors: true
          request:
            parameters:
              paths:
                commentNo: true


    # reply
      - http:
          method: POST
          path: /api/reply
          cors: true
      
      - http:
          method: PATCH
          path: /api/replies/{replyNo}
          cors: true
          request:
            parameters:
              paths:
                replyNo: true
      
      - http:
          method: PUT
          path: /api/replies/{replyNo}
          cors: true
          request:
            parameters:
              paths:
                replyNo: true
              
      - http:
          method: DELETE
          path: /api/replies/{replyNo}
          cors: true
          request:
            parameters:
              paths:
                replyNo: true